@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
  --color-primary: var(--primary);
  --color-lightBg: var(--light-background);
  --color-darkBg: var(--dark-background);
  --color-lightSecondaryBg: var(--light-secondary-background);
  --color-darkSecondaryBg: var(--dark-secondary-background);
  --color-lightTextContrast: var(--light-text-contrast);
  --color-darkTextContrast: var(--dark-text-contrast);
  --color-grayText: var(--gray-text);

  --color-darkBgBorder: var(--dark-border);

  --shadow-lightCard: 0px 4px 12px -3px rgba(255, 255, 255, 0.2),
    0px 2px 6px rgba(255, 255, 255, 0.2);
  --shadow-darkCard: 0px 4px 12px -3px rgba(0, 0, 0, 0.1),
    0px 2px 6px rgba(0, 0, 0, 0.02);

  --text-h1: 4rem;
  --text-h2: 3rem;
  --text-h3: 2rem;
  --text-h4: 1.75rem;
  --text-h5: 1.5rem;
  --text-h6: 1.25rem;

  --animate-cardRotate: card-rotate-clockwise 5000ms infinite linear;
  --animate-floatUp: floating-up 2600ms infinite linear;
  --animate-drip: drip 10000ms infinite cubic-bezier(.26,0,0,1.25);
  --animate-dripBubbleDown: drip-bubble-down 10000ms infinite cubic-bezier(.26,0,0,1.25);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  :root {
    --primary: #f55aa8;

    --light-background: #ffffff;
    --dark-background: #000000;

    --light-secondary-background: #e5e7eb;
    --dark-secondary-background: #262626;

    --light-text-contrast: #000000;
    --dark-text-contrast: #ffffff;
    --gray-text: #6b7280;

    --dark-border: #374151;
  }

  body {
    font-family: Arial, Helvetica, sans-serif;
  }

  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .no-scrollbar::-webkit-scrollbar {
    display: none; /* Safari and Chrome */
  }
}

@layer components {
  h1 {
    @apply font-semibold text-h1;
  }

  h2 {
    @apply font-semibold text-h2;
  }

  h3 {
    @apply font-semibold text-h3;
  }

  h4 {
    @apply font-semibold text-h4;
  }

  h5 {
    @apply font-semibold text-h5;
  }

  h6 {
    @apply font-semibold text-h6;
  }
}

@keyframes card-rotate-clockwise {
  0% {
    transform: rotateZ(0deg);
  }

  0% {
    transform: rotateZ(-360deg);
  }
}

@keyframes floating-up {
  0% {
    transform: translateY(0px);
  }

  50% {
    transform: translateY(15px);
  }

  100% {
    transform: translateY(0px);
  }
}

@keyframes drip {
  0% {
    transform: scaleY(1);
  }
  25% {
    transform: scaleY(1.4);
  }
  50% {
    transform: scaleY(1);
  }
  100% {
    transform: scaleY(1); 
  }
}
@keyframes drip-bubble-down {
  0% {
    transform: translateY(0px);
    opacity: 1;
  }
  10%{
    opacity: 1;
   
  }
  35%{
    opacity: 0;
    transform: translateY(40px);
  }
  100% {
    opacity: 0;
  }
}
